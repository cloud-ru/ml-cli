"""Определение общих типов данных для всего проекта.

Этот модуль содержит классы, устанавливающие поведение Click Option и Click Params

"""
import click


class Path(click.Path):
    """Класс-обертка над click.Path для кастомизации строкового представления путей."""

    def __str__(self):
        """Метод __str__.

        Возвращает строку 'OS.PATH', символизируя, что класс представляет путь в
        операционной системе. Это упрощенное представление, не отражающее реальный
        путь или его свойства, а служащее лишь предметом кастомизации.
        """
        return 'OS.PATH'


class Choice(click.Choice):
    """Класс-обертка над click. Choice для кастомизации строкового представления списка возможных выборов."""

    def __str__(self):
        """Метод __str__.

        Возвращает строку, содержащую все возможные выборы, разделённые запятыми.
        """
        return ', '.join(self.choices)


class PositiveIntWithZero(click.ParamType):
    """Класс конвектор позитивных целых чисел."""
    name = 'positive_int_with_zero'

    def convert(self, value, param, ctx):
        """Устанавливает правила валидации неотрицательных чисел."""
        try:
            int_value = int(value)
        except ValueError:
            self.fail(
                f'{value} не является допустимым целым числом', param, ctx,
            )

        if int_value < 0:
            self.fail(
                f'{value} не является положительным числом или нулем', param, ctx,
            )

        return int_value

    def __str__(self):
        """Метод __str__.

        Возвращает строку 'INT GTE(0)', символизируя, что класс представляет путь в
        операционной системе. Это упрощенное представление, не отражающее реальный
        путь или его свойства, а служащее лишь предметом кастомизации.
        """
        return 'INT GTE(0)'


positive_int_with_zero = PositiveIntWithZero()
